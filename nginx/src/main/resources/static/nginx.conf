
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

# nginx staitc html service of blog
    server {
        listen       80;
        server_name  blog.yistar.top;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location /  {
            root   html;
            index  index.html index.htm  water.html;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

###### lanproxy  ngrok  start ---- ###########

	
server {
listen 80; 
# 这里使用自己的域名 
server_name lanproxy.yistar.top; 
 charset utf-8; location / { 
 proxy_set_header X-Real-IP $remote_addr; proxy_set_header Host $http_host; 
# 这里根据你的 lanproxy 配置，改成 config.server.port的值 
proxy_pass http://127.0.0.1:8090; 
client_max_body_size 35m; 
proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection "upgrade";
  }
   }

server {
listen 80;
# 这里使用自己的域名 
server_name jenkins.yistar.top;          
 charset utf-8; location / {
   proxy_set_header X-Real-IP $remote_addr; proxy_set_header Host $http_host;
   # 这里根据你的 lanproxy 配置，改成 config.server.port的值 
   proxy_pass http://127.0.0.1:9000;
   client_max_body_size 35m;
   proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection "upgrade";
     }
        }
###### lanproxy  ngrok  end ---- ###########

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


     #HTTPS server
    #
    server {
        listen   80;
        server_name  wx.yistar.top;

       # ssl_certificate      server.crt;
       # ssl_certificate_key  server.key;

        #ssl_session_cache    shared:SSL:1m;
        #ssl_session_timeout  5m;

        #ssl_ciphers  HIGH:!aNULL:!MD5;
        #ssl_prefer_server_ciphers  on;

        location / {
            proxy_pass http://127.0.0.1:8888;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    
    }

    # http 转成https
    server {
        listen 80;
        server_name 118.24.27.89;
        location / {
            proxy_pass  https://www.yistar.top/;
        }

    }

	server {
        listen       443 ssl;
        server_name  www.yistar.top;
	#ssl on;
        ssl_certificate      server.crt;
        ssl_certificate_key  server.key;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #请按照这个协议配置
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
	#请按照这个套件配置
        ssl_prefer_server_ciphers on;
        
                        location / {
                                root  html;
				index  index.html index.htm;
                                                            }
			location /wx_mini/ {
					 proxy_pass http://wx.yistar.top/;
                     proxy_set_header Upgrade $http_upgrade;
                     proxy_set_header Connection "upgrade";

                                                                }
			location /callback{
                                         proxy_pass http://wx.yistar.top/;

                                                                }
        
                                                                }
  
     #简单文件服务器配置
    autoindex on;# 显示目录
	autoindex_exact_size on;# 显示文件大小
	autoindex_localtime on;# 显示文件时间
     server { 
listen 80; 
# 这里使用自己的域名 
 server_name file.yistar.top;
 charset utf-8; location / {

   root data;
   index index.html index.htm;
 
     }}
}


